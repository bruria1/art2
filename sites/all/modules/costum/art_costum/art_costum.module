<?php

function art_costum_menu() {
  $items ['art_img'] = array(    
    'page callback' => 'art_img',
    'access arguments' => array('access content'),
    'type' => MENU_SUGGESTED_ITEM,
  );
  return $items;
}
function art_costum_init(){
	variable_set('image_allow_insecure_derivatives', false);
}
function art_img(){	
	$base_path = str_replace("art_img","", $_GET['q']);
	$image_uri = "public://".$base_path;	
	$styleName = "overlay";
	$style = image_style_load($styleName);
	$derivative_uri = image_style_path($styleName , $image_uri);		
	$scheme = "public";	
	variable_set('image_allow_insecure_derivatives', true);
	$oo = image_style_deliver($style, $scheme,$base_path);
}


function art_costum_form_alter(&$form, &$form_state, $form_id) {
  //drupal_set_message($form_id);
  
  if($form_id == 'lang_dropdown_form') {
	$form['lang_dropdown_select']['#prefix'] = '<label for="lang-dropdown-select-language" style="display: none;" >'.t('Select Language:'). '</label>';
//	$form['lang_dropdown_select']['#attributes']['title'] = t('Select Language');
//	dpm($form);
  }
  //dpm($form_id);
}

function art_costum_query_alter_flippy_query_alter($query) {
  $exhibition = FALSE;
  $node = FALSE;
  foreach ($query->conditions() as $condition) {
    if (!is_array($condition) or !is_string($condition['field'])) {
      continue;
    }
    if ($condition['field'] == 'type' and $condition['value'] == 'exhibition') {
      $exhibition = TRUE;
    }
    if ($condition['field'] == 'n.nid') {
      $node = node_load($condition['value']);
    }
  }

  if (!$exhibition or !$node) {
    return;
  }
  $place = field_get_items('node', $node, 'field_place_site');
  if (!$place) {
    return;
  }
  $tid = $place[0]['tid'];

  $query->join('field_data_field_place_site', 'fps', 'fps.entity_id = n.nid and fps.bundle = ' . "'exhibition'");
  $query->condition('fps.field_place_site_tid', $tid);
  
}

if (!function_exists('array_replace_recursive'))
{
  function art_costum_recurse($array, $array1)
  {
    foreach ($array1 as $key => $value)
    {
      // create new key in $array, if it is empty or not an array
      if (!isset($array[$key]) || (isset($array[$key]) && !is_array($array[$key])))
      {
        $array[$key] = array();
      }

      // overwrite the value in the base array
      if (is_array($value))
      {
        $value = art_costum_recurse($array[$key], $value);
      }
      $array[$key] = $value;
    }
    return $array;
  }

  function array_replace_recursive($array, $array1)
  {
 
    // handle the arguments, merge one by one
    $args = func_get_args();
    $array = $args[0];
    if (!is_array($array))
    {
      return $array;
    }
    for ($i = 1; $i < count($args); $i++)
    {
      if (is_array($args[$i]))
      {
        $array = art_costum_recurse($array, $args[$i]);
      }
    }
    return $array;
  }
}
